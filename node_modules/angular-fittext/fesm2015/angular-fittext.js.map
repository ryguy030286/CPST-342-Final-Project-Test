{"version":3,"file":"angular-fittext.js.map","sources":["ng://angular-fittext/src/angular-fittext.directive.ts","ng://angular-fittext/src/angular-fittext.module.ts"],"sourcesContent":["import {AfterViewInit, Directive, ElementRef, HostListener, Input, OnChanges, OnInit, Renderer2, SimpleChanges} from '@angular/core';\n\n@Directive({\n  selector: '[fittext]'\n})\nexport class AngularFittextDirective implements AfterViewInit, OnInit, OnChanges {\n\n  @Input() fittext? = true;\n  @Input() compression? = 1;\n  @Input() activateOnResize? = true;\n  @Input() minFontSize?: number | 'inherit' = 0;\n  @Input() maxFontSize?: number | 'inherit' = Number.POSITIVE_INFINITY;\n  @Input() delay? = 100;\n  @Input() ngModel;\n  @Input() fontUnit?: 'px' | 'em' | string = 'px';\n\n  private fittextParent: HTMLElement;\n  private fittextElement: HTMLElement;\n  private fittextMinFontSize: number;\n  private fittextMaxFontSize: number;\n  private computed: CSSStyleDeclaration;\n  private newlines: number;\n  private lineHeight: string;\n  private display: string;\n  private calcSize = 10;\n  private resizeTimeout: number;\n\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {\n    this.fittextElement = el.nativeElement;\n    this.fittextParent = this.fittextElement.parentElement;\n    this.computed = window.getComputedStyle(this.fittextElement);\n    this.newlines = this.fittextElement.childElementCount > 0 ? this.fittextElement.childElementCount : 1;\n    this.lineHeight = this.computed['line-height'];\n    this.display = this.computed['display'];\n  }\n\n  @HostListener('window:resize')\n  public onWindowResize = (): void => {\n    if (this.activateOnResize) {\n      this.setFontSize();\n    }\n  };\n\n  public ngOnInit() {\n    this.fittextMinFontSize = this.minFontSize === 'inherit' ? this.computed['font-size'] : this.minFontSize;\n    this.fittextMaxFontSize = this.maxFontSize === 'inherit' ? this.computed['font-size'] : this.maxFontSize;\n  }\n\n  public ngAfterViewInit() {\n    this.setFontSize();\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    if (changes['compression'] && !changes['compression'].firstChange) {\n      this.setFontSize();\n    }\n    if (changes['ngModel']) {\n      this.fittextElement.innerHTML = this.ngModel;\n      this.setFontSize();\n    }\n  }\n\n  private setFontSize = (): void => {\n    this.resizeTimeout = setTimeout(\n      (() => {\n        if (this.fittextElement.offsetHeight * this.fittextElement.offsetWidth !== 0) {\n          // reset to default\n          this.setStyles(this.calcSize, 1, 'inline-block');\n          // set new\n          this.setStyles(this.calculateNewFontSize(), this.lineHeight, this.display);\n        }\n      }).bind(this),\n      this.delay\n    );\n  };\n\n  private calculateNewFontSize = (): number => {\n    const ratio = (this.calcSize * this.newlines) / this.fittextElement.offsetWidth / this.newlines;\n\n    return Math.max(\n      Math.min(\n        (this.fittextParent.offsetWidth -\n          (parseFloat(getComputedStyle(this.fittextParent).paddingLeft) +\n            parseFloat(getComputedStyle(this.fittextParent).paddingRight)) -\n          6) *\n        ratio *\n        this.compression,\n        this.fittextMaxFontSize\n      ),\n      this.fittextMinFontSize\n    );\n  };\n\n  private setStyles = (fontSize: number, lineHeight: number | string, display: string): void => {\n    this.renderer.setStyle(this.fittextElement, 'fontSize', fontSize.toString() + this.fontUnit);\n    this.renderer.setStyle(this.fittextElement, 'lineHeight', lineHeight.toString());\n    this.renderer.setStyle(this.fittextElement, 'display', display);\n  };\n}\n","import {NgModule} from '@angular/core';\nimport {AngularFittextDirective} from './angular-fittext.directive';\n\n\n@NgModule({\n  declarations: [\n    AngularFittextDirective\n  ],\n  exports: [\n    AngularFittextDirective\n  ]\n})\n\nexport class AngularFittextModule {\n}\n"],"names":[],"mappings":"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"}
