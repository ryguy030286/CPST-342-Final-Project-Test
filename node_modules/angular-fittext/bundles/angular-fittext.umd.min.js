!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define("angular-fittext",["exports","@angular/core"],e):e(t["angular-fittext"]={},t.ng.core)}(this,function(t,e){"use strict";var i=function(){function t(t,e){var n=this;this.el=t,this.renderer=e,this.fittext=!0,this.compression=1,this.activateOnResize=!0,this.minFontSize=0,this.maxFontSize=Number.POSITIVE_INFINITY,this.delay=100,this.fontUnit="px",this.calcSize=10,this.onWindowResize=function(){n.activateOnResize&&n.setFontSize()},this.setFontSize=function(){n.resizeTimeout=setTimeout(function(){n.fittextElement.offsetHeight*n.fittextElement.offsetWidth!=0&&(n.setStyles(n.calcSize,1,"inline-block"),n.setStyles(n.calculateNewFontSize(),n.lineHeight,n.display))}.bind(n),n.delay)},this.calculateNewFontSize=function(){var t=n.calcSize*n.newlines/n.fittextElement.offsetWidth/n.newlines;return Math.max(Math.min((n.fittextParent.offsetWidth-(parseFloat(getComputedStyle(n.fittextParent).paddingLeft)+parseFloat(getComputedStyle(n.fittextParent).paddingRight))-6)*t*n.compression,n.fittextMaxFontSize),n.fittextMinFontSize)},this.setStyles=function(t,e,i){n.renderer.setStyle(n.fittextElement,"fontSize",t.toString()+n.fontUnit),n.renderer.setStyle(n.fittextElement,"lineHeight",e.toString()),n.renderer.setStyle(n.fittextElement,"display",i)},this.fittextElement=t.nativeElement,this.fittextParent=this.fittextElement.parentElement,this.computed=window.getComputedStyle(this.fittextElement),this.newlines=0<this.fittextElement.childElementCount?this.fittextElement.childElementCount:1,this.lineHeight=this.computed["line-height"],this.display=this.computed.display}return t.prototype.ngOnInit=function(){this.fittextMinFontSize="inherit"===this.minFontSize?this.computed["font-size"]:this.minFontSize,this.fittextMaxFontSize="inherit"===this.maxFontSize?this.computed["font-size"]:this.maxFontSize},t.prototype.ngAfterViewInit=function(){this.setFontSize()},t.prototype.ngOnChanges=function(t){t.compression&&!t.compression.firstChange&&this.setFontSize(),t.ngModel&&(this.fittextElement.innerHTML=this.ngModel,this.setFontSize())},t.decorators=[{type:e.Directive,args:[{selector:"[fittext]"}]}],t.ctorParameters=function(){return[{type:e.ElementRef},{type:e.Renderer2}]},t.propDecorators={fittext:[{type:e.Input}],compression:[{type:e.Input}],activateOnResize:[{type:e.Input}],minFontSize:[{type:e.Input}],maxFontSize:[{type:e.Input}],delay:[{type:e.Input}],ngModel:[{type:e.Input}],fontUnit:[{type:e.Input}],onWindowResize:[{type:e.HostListener,args:["window:resize"]}]},t}(),n=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{declarations:[i],exports:[i]}]}],t}();t.AngularFittextModule=n,t.AngularFittextDirective=i,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-fittext.umd.min.js.map